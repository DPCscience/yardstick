% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-j_index.R
\name{j_index}
\alias{j_index}
\alias{j_index.data.frame}
\alias{j_index_vec}
\title{J-index}
\usage{
j_index(data, estimator = NULL, ...)

\method{j_index}{data.frame}(data, truth, estimate, estimator = NULL,
  na.rm = TRUE, ...)

j_index_vec(truth, estimate, estimator = NULL, na.rm = TRUE, ...)
}
\arguments{
\item{data}{Either a \code{data.frame} containing the \code{truth} and \code{estimate}
columns, or a \code{table}/\code{matrix} where the true class results should be
in the columns of the table.}

\item{estimator}{One of: \code{"binary"}, \code{"macro"}, \code{"macro_weighted"},
or \code{"micro"} to specify the type of averaging to be done. \code{"binary"} is
only relevant for the two class case. The other three are general methods for
calculating multiclass metrics. The default will automatically choose \code{"binary"}
or \code{"macro"} based on \code{estimate}.}

\item{...}{Not currently used.}

\item{truth}{The column identifier for the true class results
(that is a \code{factor}). This should be an unquoted column name although
this argument is passed by expression and supports
\link[rlang:quasiquotation]{quasiquotation} (you can unquote column
names). For \code{_vec()} functions, a \code{factor} vector.}

\item{estimate}{The column identifier for the predicted class
results (that is also \code{factor}). As with \code{truth} this can be
specified different ways but the primary method is to use an
unquoted variable name. For \code{_vec()} functions, a \code{factor} vector.}

\item{na.rm}{A \code{logical} value indicating whether \code{NA}
values should be stripped before the computation proceeds.}
}
\value{
A \code{tibble} with columns \code{.metric}, \code{.estimator},
and \code{.estimate} and 1 row of values.

For grouped data frames, the number of rows returned will be the same as
the number of groups.

For \code{j_index_vec()}, a single \code{numeric} value (or \code{NA}).
}
\description{
J-index
}
\section{Relevant level}{


There is no common convention on which factor level should
automatically be considered the "event" or "positive" results.
In \code{yardstick}, the default is to use the \emph{first} level. To
change this, a global option called \code{yardstick.event_first} is
set to \code{TRUE} when the package is loaded. This can be changed
to \code{FALSE} if the last level of the factor is considered the
level of interest.
}

\section{Multiclass}{


Macro, micro, and macro-weighted averaging is available for this metric.
The default is to select macro averaging if a \code{truth} factor with more
than 2 levels is provided. Otherwise, a standard binary calculation is done.
See \code{vignette("multiclass", "yardstick")} for more information.
}

\examples{
# Two class
data("two_class_example")
j_index(two_class_example, truth, predicted)

# Multiclass
library(dplyr)
data(hpc_cv)

hpc_cv \%>\%
  filter(Resample == "Fold01") \%>\%
  j_index(obs, pred)

# Groups are respected
hpc_cv \%>\%
  group_by(Resample) \%>\%
  j_index(obs, pred)

# Weighted macro averaging
hpc_cv \%>\%
  group_by(Resample) \%>\%
  j_index(obs, pred, estimator = "macro_weighted")

# Vector version
j_index_vec(two_class_example$truth, two_class_example$predicted)

# Making Class2 the "relevant" level
options(yardstick.event_first = FALSE)
j_index_vec(two_class_example$truth, two_class_example$predicted)
options(yardstick.event_first = TRUE)

}
\seealso{
Other class metrics: \code{\link{accuracy}},
  \code{\link{bal_accuracy}},
  \code{\link{detection_prevalence}}, \code{\link{kap}},
  \code{\link{mcc}}
}
\author{
Max Kuhn
}
\concept{class metrics}
