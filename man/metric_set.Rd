% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metrics.R
\name{metric_set}
\alias{metric_set}
\title{Combine metric functions}
\usage{
metric_set(...)
}
\arguments{
\item{...}{The bare names of the functions to be included in the metric set.}
}
\description{
\code{metric_set()} allows you to combine multiple metric functions together
into a new function that calculates all of them at once.
}
\details{
All functions must be of the same "function class" to be able to be used
together. For instance, \code{rmse()} can be used with \code{mae()} because they
are numeric metrics, but not with \code{accuracy()} because it is a classification
metric.
}
\examples{

library(dplyr)

# Multiple regression metrics
multi_metric <- metric_set(rmse, rsq, ccc)

# The returned function has arguments:
# fn(data, truth, estimate, na.rm = TRUE, ...)
multi_metric(solubility_test, truth = solubility, estimate = prediction)

# Groups are respected on the new metric function
class_metrics <- metric_set(accuracy, kap)

hpc_cv \%>\%
  group_by(Resample) \%>\%
  class_metrics(obs, pred)

# ---------------------------------------------------------------------------

# If you need to set options for certain metrics,
# do so ahead of time with purrr::partial(). Unfortunately
# this requires you to reset the class of the metric function manually
# as partial() removes it. Metric function classes are one of:
# "numeric_metric", "class_metric", "prob_metric"
library(purrr)
ccc_with_bias <- partial(ccc, bias = TRUE)
class(ccc_with_bias) <- c("numeric_metric", "function")

multi_metric2 <- metric_set(rmse, rsq, ccc_with_bias)

multi_metric2(solubility_test, truth = solubility, estimate = prediction)

# ---------------------------------------------------------------------------
# A class probability example:

# Note that, when given prob functions, metric_set() returns a function
# with signature:
# fn(data, truth, ...)
# to be consistent with class probability metric functions

probs_metrics <- metric_set(roc_auc, pr_auc, mn_log_loss)

hpc_cv \%>\%
  group_by(Resample) \%>\%
  probs_metrics(obs, VF:L)

}
\seealso{
\code{\link[=metrics]{metrics()}}
}
