// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// order_cpp
IntegerVector order_cpp(NumericVector x, bool decreasing);
RcppExport SEXP _yardstick_order_cpp(SEXP xSEXP, SEXP decreasingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type decreasing(decreasingSEXP);
    rcpp_result_gen = Rcpp::wrap(order_cpp(x, decreasing));
    return rcpp_result_gen;
END_RCPP
}
// pr_curve_cpp
List pr_curve_cpp(IntegerVector truth, NumericVector estimate);
RcppExport SEXP _yardstick_pr_curve_cpp(SEXP truthSEXP, SEXP estimateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type truth(truthSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type estimate(estimateSEXP);
    rcpp_result_gen = Rcpp::wrap(pr_curve_cpp(truth, estimate));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_yardstick_order_cpp", (DL_FUNC) &_yardstick_order_cpp, 2},
    {"_yardstick_pr_curve_cpp", (DL_FUNC) &_yardstick_pr_curve_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_yardstick(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
